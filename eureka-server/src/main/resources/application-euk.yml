server:
  port: 7000
# eureka 配置信息 此处单节点示例
eureka:
  server:
    # 自我保护机制 false为关闭 稍微提升高可用性
    #  eureka会通过一个公式计算是否要把某个服务提供者(例如:redis服务)从服务列表剔除
    #  如 服务集群实例10个 期望每分钟续约10*2=20个 期望阈值=20*0.85=17 则少于17时触发剔除
    enable-self-preservation: false
  client:
    # 是否将自己注册到eureka server, 默认true,
    #   当前是server, 固设置成false, 表明不会向eureka注册自己
    #   想让别人找到自己 设置成true
    # register-with-eureka: false
    # 是否从EurekaServer获取注册信息(配置信息) 此处由于单节点,不需要
    # fetch-registry: false
    # 别人调用的时候 通过哪个端口
    service-url:
      defaultZone: http://euk1.com:7000/eureka/
  instance:
    # 表示分组 同一集群的多服务应该一致 与spring.application.name一致
#    appname: euk1.com
    # 查找主机地址的 靠这个来找服务的
    #   由于此处为本机 所以需要在host文件中添加映射
    #   如果都是localhost 会被当做一回事
    hostname: euk1.com
    # 元数据 client可根据这些元数据的设置 进行相应的操作
    #   如 设置一个dalao=liuyao 客户端拿到此服务的元数据后 减少对此服务的调用
    metadata-map:
      dalao: liuyao
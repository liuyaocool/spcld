<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        xmlns: xml name space
        xsi: xml schema instance
        xsd
    -->

    <bean id="person" class="com.liuyao.spcld.springall.eneity.Person">
        <!-- 使用的是set方法 -->
        <property name="id" value="1"></property>
        <property name="name" value="zhangsan"></property>
        <property name="age" value="16"></property>
    </bean>

    <bean id="person2" class="com.liuyao.spcld.springall.eneity.Person">
        <!-- 参数列表的值 -->
        <constructor-arg name="name" value="lisi"></constructor-arg>
    </bean>

    <bean id="person3" class="com.liuyao.spcld.springall.eneity.Person">
        <!-- name可以省略 顺序要求一致 -->
        <constructor-arg value="wang5"></constructor-arg>
    </bean>

    <!-- p 命名空间 -->
    <bean id="person4" class="com.liuyao.spcld.springall.eneity.Person" p:id="4" p:name="perosn4"></bean>

    <bean id="auth" class="com.liuyao.spcld.springall.eneity.Auth">
        <property name="roleId" value="1"></property>
        <property name="useeId" value="5"></property>
        <property name="roleName" value="admin"></property>
    </bean>

    <bean id="person5" class="com.liuyao.spcld.springall.eneity.Person">
        <property name="id" value="5"></property>
        <property name="name" value="person5"></property>
        <!-- 数组赋值 value="book,sport,audio" -->
        <property name="hobbies">
            <array>
                <value>book</value>
                <value>sport</value>
                <value>audio</value>
            </array>
        </property>
        <!-- 引用赋值 -->
        <property name="auth" ref="auth"></property>
        <!-- List 赋值 value="list1,list2,list3" -->
        <property name="stringList">
            <list>
                <value>list1</value>
                <value>list2</value>
                <value>list3</value>
            </list>
        </property>
        <!-- list《obj》赋值 -->
        <property name="authList">
            <list>
                <!-- auth2 无法从ioc容器中获得 -->
                <bean id="auth2" class="com.liuyao.spcld.springall.eneity.Auth">
                    <property name="roleId" value="2"></property>
                    <property name="useeId" value="aurhlist5"></property>
                    <property name="roleName" value="admin"></property>
                </bean>
                <ref bean="auth"></ref>
            </list>
        </property>
        <!-- set赋值 -->
        <property name="stringSet">
            <set>
                <value>set1</value>
                <value>set2</value>
                <value>set3</value>
                <value>set3</value>
            </set>
        </property>
        <!-- map赋值 -->
        <property name="map">
            <map>
                <entry key="map1" value="mapqvalue"></entry>
                <entry key="auth1" value-ref="auth"></entry>
                <entry key="objmap">
                    <bean class="com.liuyao.spcld.springall.eneity.Auth">
                        <property name="roleId" value="3"></property>
                        <property name="useeId" value="mapauth"></property>
                        <property name="roleName" value="admin-user"></property>
                    </bean>
                </entry>
                <entry>
                    <key><value>etkey</value></key>
                    <value>etval</value>
                </entry>
                <entry key="listmap">
                    <list>
                        <value>listmap1</value>
                        <value>listmap2</value>
                        <value>listmap3</value>
                        <value>listmap4</value>
                    </list>
                </entry>
            </map>
        </property>
        <!-- properties赋值 -->
        <property name="properties">
            <props>
                <prop key="aaa">aaa</prop>
                <prop key="bbb">bbb</prop>
            </props>
        </property>
    </bean>

    <!-- abstract="true" 将不会实例化 -->
    <bean id="parent" class="com.liuyao.spcld.springall.eneity.Person">
        <!-- 使用的是set方法 -->
        <property name="id" value="1"></property>
        <property name="name" value="parent"></property>
        <property name="age" value="55"></property>
    </bean>

    <!-- 继承 属性值 -->
    <bean id="son" class="com.liuyao.spcld.springall.eneity.Person" parent="parent">
        <property name="name" value="son"></property>
    </bean>

    <!--
    设置bean对象的作用域
    scope 属性
        singleton 单例
        prototype 多例 从IOC容器中获取实例 每次都新创建
        request 每次发送请求都是一个新对象 砍了
        session 每一个会话一个新对象 砍了

    单例：创建ioc容器完成之前 此对象已经创建完成
    多例：用到的时候才会创建
    -->
    <bean id="person6" class="com.liuyao.spcld.springall.eneity.Person" scope="prototype">
        <!-- 使用的是set方法 -->
        <property name="id" value="1"></property>
        <property name="name" value="person6"></property>
        <property name="age" value="55"></property>
    </bean>

    <!-- 静态工厂 -->
    <bean id="personStaticFac" class="com.liuyao.spcld.springall.factory.PersonStaticFactory" factory-method="getInstance"></bean>

    <!-- 实例工厂：先创建工厂实例 再通过其创建实例 -->
    <bean id="personFactory" class="com.liuyao.spcld.springall.factory.PersonInstanceFactory"></bean>
    <bean id="personInstanceFac" class="com.liuyao.spcld.springall.eneity.Person" factory-bean="personFactory" factory-method="getInstance"></bean>

    <!-- factorybean 创建实例
    spring 创建bean方式的补充
    可以按照需求创建对象，创建的对象交给spring ioc容器来管理
    使用的时候才会创建
    -->
    <bean id="myFactoryBean" class="com.liuyao.spcld.springall.factory.MyFactoryBean"></bean>

    <bean id="person7" class="com.liuyao.spcld.springall.eneity.Person" init-method="init" destroy-method="destroy">
        <property name="name" value="person7"></property>
    </bean>

    <!-- 所有bean 初始化 前后 进行增强-->
    <bean id="myBeanPostProcessor" class="com.liuyao.spcld.springall.processor.MyBeanPostProcessor"></bean>

</beans>